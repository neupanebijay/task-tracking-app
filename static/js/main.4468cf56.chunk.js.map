{"version":3,"sources":["components/About.comp.js","components/AddTask.comp.js","components/Footer.comp.js","components/Button.comp.js","components/Header.comp.js","components/Task.comp.js","components/Tasks.comp.js","App.js","reportWebVitals.js","index.js"],"names":["About","style","textAlign","to","AddTask","onAddTask","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","Button","color","onClick","backgroundColor","defaultProps","Header","title","onAddClose","addCloseTask","location","useLocation","pathname","Task","task","onDelete","onToggle","onDoubleClick","id","cursor","Tasks","tasks","map","App","setAddCloseTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","resp","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","res","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4468cf56.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            <h4>About page</h4>\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport const AddTask = ({onAddTask}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSaveSubmit= (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(!text){\r\n            alert('please add a task')\r\n        }\r\n\r\n        onAddTask({text, day, reminder})\r\n        // it clears the form after saving the input\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSaveSubmit}>\r\n        \r\n            <div className=\"form-control\">\r\n                <label>Add Task:  </label>\r\n                <input type=\"text\"  placeholder=\"Add task here\" value={text} onChange={(e)=>setText(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Day & Time:  </label>\r\n                <input type=\"text\"  placeholder=\"Add date and time of the task\" value={day} onChange={(e)=> setDay(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label>Set Reminder:  </label>\r\n\r\n                    {/* if reminder is true than checked else unchecked */}\r\n                <input type=\"checkbox\"\r\n                    checked={reminder}\r\n                    value= { reminder } \r\n                    onChange={(e)=> setReminder(e.currentTarget.checked)}/>\r\n                \r\n            </div>\r\n                <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\"/>\r\n        \r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nexport const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; Bijay Neupane. All rights reserved 2021</p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const Button = ({color, text, onClick}) => {\r\n    \r\n    return (\r\n        <button \r\n        onClick={onClick}\r\n        className=\"btn\"\r\n         style={{backgroundColor: color }} >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps={\r\n    text: \"Add\",\r\n    color:\"yellow\",\r\n}\r\n\r\nButton.propTypes={\r\n    text:PropTypes.string,\r\n    color:PropTypes.string,\r\n}","import { useLocation } from \"react-router-dom\";\r\nimport { Button } from \"./Button.comp\";\r\n\r\nexport const Header = ({title, onAddClose, addCloseTask}) => {\r\n\r\n    const location = useLocation()\r\n    // const onClick = (e) => {\r\n    //     console.log(e);\r\n\r\n    // }\r\n\r\n   \r\n  return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n        { location.pathname ==='/' && <Button color={addCloseTask ? 'Red' : 'Green'} text={addCloseTask ? 'Close' : 'Add'} onClick={onAddClose}/>}\r\n           \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps={\r\n    title:'Task Tracker'\r\n}\r\n","import { FaRegTimesCircle } from 'react-icons/fa'\r\n\r\nexport const Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}` } onDoubleClick={()=>onToggle(task.id)}>\r\n            {/* if task.reminder from tasks is true then we have class reminder  */}\r\n            <h3>{task.text}\r\n            <FaRegTimesCircle\r\n             style={{color: 'red', cursor: 'pointer'}} \r\n             onClick= {()=>onDelete(task.id)}\r\n             /></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import {useState} from 'react'\r\nimport { Task } from './Task.comp'\r\n\r\nexport const Tasks = ({tasks, onDelete, onToggle}) => {\r\n    \r\n    return (\r\n        <>\r\n        {tasks.map((task)=>(\r\n           \r\n            <Task task = {task} key ={task.id} onDelete={onDelete} onToggle={onToggle} />\r\n        )\r\n        )}\r\n\r\n\r\n            \r\n\r\n            \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport { About } from './components/About.comp';\nimport { AddTask } from './components/AddTask.comp';\nimport { Footer } from './components/Footer.comp';\nimport { Header } from './components/Header.comp';\nimport { Tasks } from './components/Tasks.comp';\n\nfunction App() {\n\n\n  const [addCloseTask, setAddCloseTask] = useState(false)\n  \n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async() => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async(id) => {\n    const resp = await fetch('http://localhost:5000/tasks')\n    const data = await resp.json()\n    return data\n    // console.log(data)\n  }\n  // Fetch Task\n  const fetchTask = async(id) => {\n    const resp = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await resp.json()\n    return data\n    // console.log(data)\n  }\n  \n\n// Add Task\nconst addTask = async(task) => {\n  // console.log(task)\n  // to add task in the state with new id\n  // const id = Math.floor(Math.random()*10000) + 1\n  // // console.log(id)\n  // const newTask = {id, ...task}\n  // setTasks([...tasks, newTask])\n\n  const resp = await fetch('http://localhost:5000/tasks', {\n    method: 'POST',\n    // since we are adding data we need to add headers as well(even when sending data)\n    headers: {\n      // defining json content type\n      'Content-type': 'application/json'\n    },\n    // JSON.stringify converts javascript object into json strings\n    body: JSON.stringify(task)\n  })\n\nconst data = await resp.json()\nsetTasks([...tasks, data])\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n\n}\n\n// Delete task \nconst deleteTask = async(id) => {\n  await fetch(`http://localhost:5000/tasks/${id}`,{\n    method: 'DELETE'  \n  })\n\n// const deleteTask = (id) => {\n  // console.log('Delete task',id)\n  setTasks(tasks.filter((task)=>task.id !==id))\n}\n\n\n// Toggle Reminder\nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(updatedTask),\n  })\n\n  const data = await res.json()\n\n  setTasks(\n    tasks.map((task) =>\n      task.id === id ? { ...task, reminder: data.reminder } : task\n    )\n  )\n}\n\n\n\n  return (\n    <Router>\n    <div className=\"container\">\n      {/* to chang the add and close button, add prop in header as button is in header */}\n      <Header onAddClose={() => setAddCloseTask(!addCloseTask)} addCloseTask={addCloseTask}/>\n      \n      {/* <Tasks/> */}\n      <Route path=\"/\" exact render={(props)=>(\n        <>\n          {addCloseTask && <AddTask onAddTask={addTask}/>}\n          {tasks.length > 0 ? (\n          <Tasks tasks={tasks} onDelete={deleteTask} onToggle ={toggleReminder} />)  : (\n          'No Tasks to Show')} \n        </>\n\n      )}></Route>    \n     \n      <Route path=\"/about\" component={About} />\n       <Footer />\n    </div>\n    </Router>\n  );\n  \n  }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}